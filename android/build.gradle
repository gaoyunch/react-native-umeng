buildscript {
    // Buildscript is evaluated before everything else so we can't use getExtOrDefault
    def kotlin_version = rootProject.ext.has('kotlinVersion') ? rootProject.ext.get('kotlinVersion') : project.properties['Umeng_kotlinVersion']

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        // noinspection DifferentKotlinGradleVersion
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

def kotlin_version = safeExtGet('kotlinVersion', "1.3.50")

android {
    compileSdkVersion safeExtGet('compileSdkVersion', 28)
    buildToolsVersion safeExtGet('buildToolsVersion', "28.0.3")
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion safeExtGet('targetSdkVersion', 28)
        versionCode 1
        versionName "1.0"
        consumerProguardFiles 'proguard-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }
    lintOptions {
        disable 'GradleCompatible'
        abortOnError false
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // noinspection GradleDynamicVersion
    implementation 'com.facebook.react:react-native:+'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    // 基础组件库依赖(必须)
    implementation "com.umeng.umsdk:common:${safeExtGet('umengCommonVersion', '9.1.0')}"
    implementation "com.umeng.umsdk:asms:${safeExtGet('umengAsmsVersion', '1.1.3')}"
    implementation "com.umeng.umsdk:crash:${safeExtGet('umengCrashVersion', '0.0.4')}"

    implementation "com.umeng.umsdk:utdid:${safeExtGet('umengUtdidVersion', '1.5.2')}"
    implementation 'com.umeng.umsdk:alicloud-httpdns:1.2.5'
    implementation 'com.umeng.umsdk:alicloud-utils:1.1.5'
    implementation 'com.umeng.umsdk:alicloud_beacon:1.0.1'
    // 友盟 push 相关依赖(必须)
    implementation "com.umeng.umsdk:push:${safeExtGet('umengPushVersion', '6.1.0')}"
    // OAID目前为目前国内市场主流的Android Q设备标识
    // 目前主流厂商（华为、oppo、vivo、联想、小米）均已在新版本系统中支持该标识的获取，具有权威性
    // 您可根据需求选择接入（华为已默认接入无需额外添加jar包）
    // 如您不在U-App的集成中加入OAID库，可能会导致U-App面向Android Q系统的新增、启动、活跃、留存等指标减少，因此，建议您接入OAID库
    implementation  'com.umeng.umsdk:oaid_lenovo:1.0.0'
    implementation  'com.umeng.umsdk:oaid_mi:1.0.0'
    implementation  'com.umeng.umsdk:oaid_oppo:1.0.4'
    implementation  'com.umeng.umsdk:oaid_vivo:1.0.0.1'
    // 第三方消息推送通道
    implementation 'com.umeng.umsdk:huawei-basetb:2.6.3.306'
    implementation 'com.umeng.umsdk:huawei-pushtb:2.6.3.306'
    implementation 'com.umeng.umsdk:huawei-umengaccs:1.2.4'
    implementation 'com.umeng.umsdk:meizu-push:3.8.7'
    implementation 'com.umeng.umsdk:meizu-umengaccs:1.1.1'
    implementation 'com.umeng.umsdk:oppo-push:2.0.2'
    implementation 'com.umeng.umsdk:oppo-umengaccs:1.0.6'
    implementation 'com.umeng.umsdk:vivo-push:2.3.5'
    implementation 'com.umeng.umsdk:vivo-umengaccs:1.1.0'
    implementation 'com.umeng.umsdk:xiaomi-push:3.7.0'
    implementation 'com.umeng.umsdk:xiaomi-umengaccs:1.1.4'

    implementation "com.umeng.umsdk:agoo-accs:${safeExtGet('umengAgooAccsVersion', '3.3.8.8-open-fix2')}"
    implementation "com.umeng.umsdk:agoo_networksdk:${safeExtGet('umengAgooNetworkVersion', '3.5.5')}"
    implementation "com.umeng.umsdk:agoo_tlog:${safeExtGet('umengAgooTlogVersion', '3.0.0.17')}"
    implementation "com.umeng.umsdk:agoo_tnet4android:${safeExtGet('umengAgooTnetVersion', '3.1.14.9')}"

}
