{"version":3,"sources":["analytics.ts"],"names":["NativeModules","RNUMengAnalytics","RNTUmengAnalytics","CHANNEL","getDeviceInfo","signIn","userId","provider","signOut","currentPage","enterPage","pageName","leavePage","undefined","bannedKeys","id","ts","du","checkEventId","eventId","Error","checkEventDataKey","data","key","sendEvent","sendEventLabel","label","sendEventData","sendEventCounter","counter","sendError","error"],"mappings":"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","sourcesContent":["\nimport { NativeModules } from 'react-native'\n\nconst { RNUMengAnalytics } = NativeModules;\n\nconst RNTUmengAnalytics = RNUMengAnalytics;\n\nexport type DeviceInfo = {\n    deviceId: string\n    mac?: string\n}\n\n// 初始化时配置的渠道\nexport const CHANNEL: string = RNTUmengAnalytics.CHANNEL\n\nexport const getDeviceInfo = (): Promise<DeviceInfo> => {\n    return RNTUmengAnalytics.getDeviceInfo()\n}\n\nexport const signIn = (userId: string, provider: string) => {\n    RNTUmengAnalytics.signIn(userId, provider)\n}\n\nexport const signOut = () => {\n    RNTUmengAnalytics.signOut()\n}\n\n// enterPage 和 leavePage 必须对称调用\n// 在这里做一层保证\nlet currentPage: string | undefined\nexport const enterPage = (pageName: string) => {\n    if (!currentPage) {\n        RNTUmengAnalytics.enterPage(pageName)\n        currentPage = pageName\n    }\n}\n\nexport const leavePage = (pageName: string) => {\n    if (currentPage === pageName) {\n        RNTUmengAnalytics.leavePage(pageName)\n        currentPage = undefined\n    }\n}\n\n// 友盟文档规定：id，ts，du 是保留字段，不能作为 event id 及 key 的名称。\nconst bannedKeys: { [key: string]: any } = {\n    id: true,\n    ts: true,\n    du: true,\n}\n\nconst checkEventId = (eventId: string) => {\n    if (bannedKeys[eventId]) {\n        throw new Error(`[${eventId}] 是保留字段，不能作为 event id.`)\n    }\n}\nconst checkEventDataKey = (data: object) => {\n    for (let key in data) {\n        if (bannedKeys[key]) {\n            throw new Error(`${key} 是保留字段，不能作为 event data 的 key.`)\n        }\n    }\n}\n\nexport const sendEvent = (eventId: string) => {\n    checkEventId(eventId)\n    RNTUmengAnalytics.sendEvent(eventId)\n}\n\nexport const sendEventLabel = (eventId: string, label: string) => {\n    checkEventId(eventId)\n    RNTUmengAnalytics.sendEventLabel(eventId, label)\n}\n\nexport const sendEventData = (eventId: string, data: object) => {\n    checkEventId(eventId)\n    checkEventDataKey(data)\n    RNTUmengAnalytics.sendEventData(eventId, data)\n}\n\nexport const sendEventCounter = (eventId: string, data: object, counter: number) => {\n    checkEventId(eventId)\n    checkEventDataKey(data)\n    RNTUmengAnalytics.sendEventCounter(eventId, data, counter)\n}\n\nexport const sendError = (error: string) => {\n    // 安卓才有这个接口\n    if (RNTUmengAnalytics.sendError) {\n        RNTUmengAnalytics.sendError(error)\n    }\n}\n"]}